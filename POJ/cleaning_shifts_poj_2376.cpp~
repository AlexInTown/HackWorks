#include <iostream>
#include <stdio.h>
#include <memory.h>
#include <algorithm>
using namespace std;

int N,T;
struct Interval{
    int start;
    int end;
};
struct Comp{
    bool operator()(const Interval& a, const Interval& b){
        return a.end < b.end || a.end == b.end && a.start < b.start;
    }
};
Interval intervals[25000];
int dp[25001];
int main(){
    scanf("%d%d", &N, &T);
    int i;
    for(i = 0; i < N; ++i){
        scanf("%d%d", &intervals[i].start, &intervals[i].end);
    }
    sort(intervals, intervals + N, Comp());
    memset(dp, -1, sizeof(dp));
    dp[0] = 0;
    for(i = 0; i < N; ++i){
        
        if(dp[i] == -1
        dp[i+1] = dp[i]
    }
    Interval temp;
    temp.start = 1;
    temp.end = 1000001;
    int cnt = 0;
    int cur = 1;
    for(i = 0; i < N && cur <= T; ++i){
        if(intervals[i].start > cur){ cnt = -1; break;}
        if(intervals[i].end > cur) cur = intervals[i].end + 1;
    }
    printf("%d\n", cnt);
    return 0;
}
